{"name":"Wigiki","tagline":"Static wiki generator using Github's gistsâ„¢ as pages","body":"### Wiki + Gists = Wigiki\r\n\r\nThe concept behind wigiki was to create a tool which can group and organize all my random notes that I write from time to time as [Gists](https://gist.github.com/).\r\n\r\nThe workflow is simple, you supply a json configuration file and a folder where some template files reside and wigiki will generate a static html site. The site can be deployed on your own server or on Github (using the static pages feature). Each gist present in the configuration file, will be a page on the site.\r\n\r\nThe templates are using the amazing [jinja2](http://jinja.pocoo.org/docs/) template engine, which means that it is fairly easy to create your own themes. Also, the project includes a very basic theme inside the `templates` folder.\r\n\r\n### Installation\r\n\r\nTODO\r\n\r\n### Configuration\r\n\r\nCurrently only the `json` format is supported for configuration. `YAML` support is also planned. The configuration file will usually reside in your site's root directory. It includes options about the gists (pages) but it also supports options that you can also supply from the command line. \r\n\r\nThe configuration file supports three main configuration sections shown below.\r\n\r\nsection key | description\r\n--- | ---\r\nsite | Global options that are available to the templates\r\ngists | Gists to use as pages\r\napp | Application parameters that can also be supplied from the command line\r\n\r\n#### site\r\n\r\nEverything under the `site` key will be available in the templates as a python dictionary. The default template uses a variable `title` to set the site's template:\r\n\r\n```\r\n<h1>{{ site['title'] }}</h1>\r\n```\r\n\r\n#### gists\r\n\r\nUnder the `gists` key you configure the gists that you want to include to your site. Each gist is essentially a page on your site. You define gists using the author's `username`, the `title` of the page and the `gist id`. Wigiki combines these values and builds the appropriate urls to include the gists.\r\n\r\nFor example the following configuration:\r\n```\r\n\"tlatsas\" : {\r\n    \"test\": 5764229\r\n}\r\n```\r\nwill include the gist https://gist.github.com/tlatsas/5764229 under the name `test`.\r\n\r\n#### app\r\n\r\nUnder the `app` key you configure parameters that can also be supplied from the command line. That way you don't have to give the same arguments over and over again. Currently the following parameters are supported:\r\n\r\nparameter | description\r\n--- | ---\r\noutput | Generate site in given folder [default: _site]\r\nbaseurl | The base URL for all site pages [default: /]\r\n\r\nThis is a sample configuration file:\r\n\r\n```\r\n{\r\n    \"site\": {\r\n        \"title\": \"a static wiki-like site using gists\"\r\n    },\r\n    \"gists\": {\r\n        \"tlatsas\": {\r\n            \"page 1 title\": \"5764226\",\r\n            \"page 2 title\": \"5764229\"\r\n        }\r\n    },\r\n    \"app\": {\r\n        \"output\": \"_site\",\r\n        \"baseurl\": \"notes\"\r\n    }\r\n}\r\n```\r\n\r\n### Templating\r\n\r\nTODO\r\n\r\n### Generate your first site\r\n\r\nTODO\r\n\r\n### Hosting\r\n\r\nTODO\r\n\r\n### Support and Contributing\r\nCheck out the documentation at http://tlatsas.github.io/wigiki, report an issue at https://github.com/tlatsas/wigiki/issues or contribute at https://github.com/tlatsas/wigiki.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}